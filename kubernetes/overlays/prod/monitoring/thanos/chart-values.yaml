---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: flux-system
spec:
  values:
    store:
      enabled: true
      annotations:
        iam.gke.io/gcp-service-account: portefaix-prod-thanos@portefaix-prod.iam.gserviceaccount.com
      persistentVolumeClaim:
        name: thanos-store-data-volume
        spec:
          #  storageClassName: ""
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
          selector: {}
            # volumeName: ""
            # volumeMode: ""
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 30m
          memory: 400Mi

    query:
      enabled: true
      # replicaCount: 1
      # replicaLabels:
      #   - replica
      stores:
      #  - "dnssrv+_grpc._tcp.<service>.<namespace>.svc.cluster.local"
      - "dnssrv+_grpc._tcp.prometheus-k8s-0.monitoring.svc.cluster.local"
      resources:
        limits:
          cpu: 1000m
          memory: 2Gi
        requests:
          cpu: 300m
          memory: 1Gi
      http:
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: nginx
            # cert-manager.io/cluster-issuer: 'letsencrypt-prod'
            nginx.ingress.kubernetes.io/auth-url: 'https://gcp.portefaix.xyz/oauth2/auth'
            nginx.ingress.kubernetes.io/auth-signin: 'https://gcp.portefaix.xyz/oauth2/start?rd=$escaped_request_uri'
          hosts:
            - thanos.gcp.portefaix.xyz
          # tls:
          #   - secretName: thanos.gcp.portefaix.xyz-tls
          #     hosts:
          #       - thanos.gcp.portefaix.xyz
      resources:
        limits:
          cpu: 400m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 400Mi

    compact:
      enabled: true
      annotations:
        iam.gke.io/gcp-service-account: portefaix-prod-thanos@portefaix-prod.iam.gserviceaccount.com
      persistentVolumeClaim:
        name: thanos-compact-data-volume
        spec:
          # storageClassName: ""
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
          selector: {}
            # volumeName: ""
            # volumeMode: ""
      resources:
        limits:
          cpu: 300m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 200Mi

    bucket:
      enabled: true
      annotations:
        iam.gke.io/gcp-service-account: portefaix-prod-thanos@portefaix-prod.iam.gserviceaccount.com
      http:
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: 'letsencrypt-prod'
            nginx.ingress.kubernetes.io/auth-url: 'https://gcp.portefaix.xyz/oauth2/auth'
            nginx.ingress.kubernetes.io/auth-signin: 'https://gcp.portefaix.xyz/oauth2/start?rd=$escaped_request_uri'
          hosts:
            - thanos-bucket.gcp.portefaix.xyz
          # tls:
          #   - secretName: thanos-bucket.gcp.portefaix.xyz-tls
          #     hosts:
          #       - thanos-bucket.gcp.portefaix.xyz
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 300Mi


    rule:
      enabled: false

    sidecar:
      enable: true

  # valuesFrom:
  #   - kind: Secret
  #     name: thanos-objstore-config