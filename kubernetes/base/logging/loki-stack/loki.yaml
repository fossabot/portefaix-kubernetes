---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
  namespace: flux-system
spec:
  interval: 5m
  chart:
    spec:
      chart: loki
      sourceRef:
        kind: HelmRepository
        name: grafana-loki-charts
        namespace: flux-system
      interval: 5m
      version: 2.0.1
  releaseName: loki
  targetNamespace: logging
  # dependsOn:
  #   # Depends on having prometheus-operator due to service monitor resources.
  #   - name: kube-prometheus-stack
  #     namespace: flux-system
  values:
    image:
      # repository: grafana/loki
      # tag: 2.0.0

    ingress:
      enabled: false

    config:
      auth_enabled: false
      ingester:
        chunk_idle_period: 3m
        chunk_block_size: 262144
        chunk_retain_period: 1m
        max_transfer_retries: 0
        lifecycler:
          ring:
            kvstore:
              store: inmemory
            replication_factor: 1

          ## Different ring configs can be used. E.g. Consul
          # ring:
          #   store: consul
          #   replication_factor: 1
          #   consul:
          #     host: "consul:8500"
          #     prefix: ""
          #     http_client_timeout: "20s"
          #     consistent_reads: true
      limits_config:
        enforce_metric_name: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
      schema_config:
        configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
      server:
        http_listen_port: 3100
      storage_config:
        boltdb_shipper:
          active_index_directory: /data/loki/boltdb-shipper-active
          cache_location: /data/loki/boltdb-shipper-cache
          cache_ttl: 24h         # Can be increased for faster performance over longer query periods, uses more disk space
          shared_store: filesystem
        filesystem:
          directory: /data/loki/chunks
      chunk_store_config:
        max_look_back_period: 0s
      table_manager:
        retention_deletes_enabled: false
        retention_period: 0s
      compactor:
        working_directory: /data/loki/boltdb-shipper-compactor
        shared_store: filesystem

    extraArgs:
      log.level: debug

    livenessProbe:
      httpGet:
        path: /ready
        port: http-metrics
      initialDelaySeconds: 45

    ## If you set enabled as "True", you need :
    ## - create a pv which above 10Gi and has same namespace with loki
    ## - keep storageClassName same with below setting
    persistence:
      enabled: false
      accessModes:
      - ReadWriteOnce
      size: 10Gi
      # selector:
      #   matchLabels:
      #     app.kubernetes.io/name: loki
      # subPath: ""
      # existingClaim:

    ## Pod Labels
    podLabels: {}

    ## Pod Annotations
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "http-metrics"

    podManagementPolicy: OrderedReady

    ## Assign a PriorityClassName to pods if set
    # priorityClassName:

    rbac:
      create: true
      pspEnabled: true

    readinessProbe:
      httpGet:
        path: /ready
        port: http-metrics
      initialDelaySeconds: 45

    replicas: 1

    resources: {}
    # limits:
    #   cpu: 200m
    #   memory: 256Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

    securityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001

    service:
      type: ClusterIP
      nodePort:
      port: 3100
      annotations: {}
      labels: {}

    serviceAccount:
      create: true
      name:
      annotations: {}

    terminationGracePeriodSeconds: 4800

    ## Tolerations for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations: []

    # The values to set in the PodDisruptionBudget spec
    # If not set then a PodDisruptionBudget will not be created
    podDisruptionBudget: {}
    # minAvailable: 1
    # maxUnavailable: 1

    updateStrategy:
      type: RollingUpdate

    serviceMonitor:
      enabled: false
      interval: ""
      additionalLabels: {}
      annotations: {}
      # scrapeTimeout: 10s

    initContainers: []
    ## Init containers to be added to the loki pod.
    # - name: my-init-container
    #   image: busybox:latest
    #   command: ['sh', '-c', 'echo hello']

    extraContainers: []
    ## Additional containers to be added to the loki pod.
    # - name: reverse-proxy
    #   image: angelbarrera92/basic-auth-reverse-proxy:dev
    #   args:
    #     - "serve"
    #     - "--upstream=http://localhost:3100"
    #     - "--auth-config=/etc/reverse-proxy-conf/authn.yaml"
    #   ports:
    #     - name: http
    #       containerPort: 11811
    #       protocol: TCP
    #   volumeMounts:
    #     - name: reverse-proxy-auth-config
    #       mountPath: /etc/reverse-proxy-conf


    extraVolumes: []
    ## Additional volumes to the loki pod.
    # - name: reverse-proxy-auth-config
    #   secret:
    #     secretName: reverse-proxy-auth-config

    ## Extra volume mounts that will be added to the loki container
    extraVolumeMounts: []

    extraPorts: []
    ## Additional ports to the loki services. Useful to expose extra container ports.
    # - port: 11811
    #   protocol: TCP
    #   name: http
    #   targetPort: http

    # Extra env variables to pass to the loki container
    env: []






    loki:
      enabled: true
      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      config:
        auth_enabled: false
        ingester:
          chunk_idle_period: 3m
          chunk_block_size: 262144
          chunk_retain_period: 1m
          max_transfer_retries: 0
          lifecycler:
            ring:
              kvstore:
                store: inmemory
              replication_factor: 1
        limits_config:
          enforce_metric_name: false
          reject_old_samples: true
          reject_old_samples_max_age: 168h
        schema_config:
          configs:
          - from: 2020-10-24
            store: boltdb-shipper
            object_store: filesystem
            schema: v11
            index:
              prefix: index_
              period: 24h
        server:
          http_listen_port: 3100
        storage_config:
          boltdb_shipper:
            active_index_directory: /data/loki/boltdb-shipper-active
            cache_location: /data/loki/boltdb-shipper-cache
            cache_ttl: 24h         # Can be increased for faster performance over longer query periods, uses more disk space
            shared_store: filesystem
          # filesystem:
          #   directory: /data/loki/chunks
          gcs:
            bucket_name:
          # aws:
          #   s3: s3://xxxxxx/xxxx
        chunk_store_config:
          max_look_back_period: 0s
        table_manager:
          retention_deletes_enabled: false
          retention_period: 0s
        compactor:
          working_directory: /data/loki/boltdb-shipper-compactor
          shared_store: filesystem

      serviceMonitor:
        enabled: true
        additionalLabels:
          release: kube-prometheus-stack

    # promtail:
    #   enabled: false
    #   serviceMonitor:
    #     enabled: true
      # extraScrapeConfigs:
      #   - job_name: syslog
      #     syslog:
      #       listen_address: 0.0.0.0:1514
      #       idle_timeout: 60s
      #       label_structured_data: yes
      #       labels:
      #         job: "syslog"
      #     relabel_configs:
      #       - source_labels: ["__syslog_connection_ip_address"]
      #         target_label: "ip_address"
      #       - source_labels: ["__syslog_message_severity"]
      #         target_label: "severity"
      #       - source_labels: ["__syslog_message_facility"]
      #         target_label: "facility"
      #       - source_labels: ["__syslog_message_hostname"]
      #         target_label: "host"
      # syslogService:
      #   enabled: true
      #   type: LoadBalancer
      #   port: 1514
      #   externalIPs:
      #     - 10.0.35.66

    fluent-bit:
      enabled: true
      serviceMonitor:
        enabled: true
      additionalLabels:
        release: kube-prometheus-stack

    grafana:
      enabled: false

    prometheus:
      enabled: false