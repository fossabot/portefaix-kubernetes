---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki-stack
  namespace: flux-system
spec:
  interval: 5m
  chart:
    spec:
      chart: loki
      sourceRef:
        kind: HelmRepository
        name: grafana-loki-charts
        namespace: flux-system
      interval: 5m
      version: 2.0.1
  releaseName: loki-stack
  targetNamespace: logging
  values:
    grafana:
      enabled: false
    prometheus:
      enabled: false
    filebeat:
      enabled: false
    logstash:
      enabled: false
    promtail:
      enabled: false

    loki:
      enabled: true

      config:
        auth_enabled: false
        ingester:
          chunk_idle_period: 3m
          chunk_block_size: 262144
          chunk_retain_period: 1m
          max_transfer_retries: 0
          lifecycler:
            ring:
              kvstore:
                store: inmemory
              replication_factor: 1

            ## Different ring configs can be used. E.g. Consul
            # ring:
            #   store: consul
            #   replication_factor: 1
            #   consul:
            #     host: "consul:8500"
            #     prefix: ""
            #     http_client_timeout: "20s"
            #     consistent_reads: true
        limits_config:
          enforce_metric_name: false
          reject_old_samples: true
          reject_old_samples_max_age: 168h
        schema_config:
          configs:
          - from: 2020-10-24
            store: boltdb-shipper
            object_store: filesystem
            schema: v11
            index:
              prefix: index_
              period: 24h
        server:
          http_listen_port: 3100
        storage_config:
          boltdb_shipper:
            active_index_directory: /data/loki/boltdb-shipper-active
            cache_location: /data/loki/boltdb-shipper-cache
            cache_ttl: 24h         # Can be increased for faster performance over longer query periods, uses more disk space
            shared_store: filesystem
          filesystem:
            directory: /data/loki/chunks
        chunk_store_config:
          max_look_back_period: 0s
        table_manager:
          retention_deletes_enabled: false
          retention_period: 0s
        compactor:
          working_directory: /data/loki/boltdb-shipper-compactor
          shared_store: filesystem
      # Needed for Alerting: https://grafana.com/docs/loki/latest/alerting/
      # This is just a simple example, for more details: https://grafana.com/docs/loki/latest/configuration/#ruler_config
      #  ruler:
      #    storage:
      #      type: local
      #      local:
      #        directory: /rules
      #    rule_path: /tmp/scratch
      #    alertmanager_url: http://alertmanager.svc.namespace:9093
      #    ring:
      #      kvstore:
      #        store: inmemory
      #    enable_api: true

      persistence:
        enabled: false
        accessModes:
        - ReadWriteOnce
        size: 10Gi
        annotations: {}
        # selector:
        #   matchLabels:
        #     app.kubernetes.io/name: loki
        # subPath: ""
        # existingClaim:

      serviceAccount:
        create: true
        name: loki

      serviceMonitor:
        enabled: true
        additionalLabels:
          release: kube-prometheus-stack

    fluent-bit:
      enabled: true
      loki:
        serviceName: "loki.logging.svc.cluster.local"

      # config:
      #   port: 2020
      #   tenantID: '""'
      #   batchWait: 1
      #   batchSize: 1048576
      #   loglevel: warn
      #   lineFormat: json
      #   k8sLoggingExclude: "Off"
      #   k8sLoggingParser: "Off"
      #   memBufLimit: "5MB"
      #   removeKeys:
      #     - kubernetes
      #     - stream
      #   autoKubernetesLabels: false
      #   labels: '{job="fluent-bit"}'
      #   labelMap:
      #     kubernetes:
      #       namespace_name: namespace
      #       labels:
      #         app: app
      #         release: release
      #       host: node
      #       container_name: container
      #       pod_name: instance
      #     stream: stream
      #   # parsers: # Allow to define custom parsers. The key here is the same as the one in the [PARSER] section of parsers.conf file.
      #   #  - Name: json
      #   #    Format: json
      #   #    Time_Key: time
      #   #    Time_Format: "%d/%b/%Y:%H:%M:%S %z"

      #   # extraOutputs: # Allow to define extra outputs in addition to the one automatically created
      #   #   - Name: stdout
      #   #     Format: json
      #   #     json_date_format: time

      serviceAccount:
        create: true
        name: fluent-bit

      serviceMonitor:
        enabled: true
        additionalLabels:
          release: kube-prometheus-stack
